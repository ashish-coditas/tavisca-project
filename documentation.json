{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-660a195153d17731cba1bb61ed033386",
            "file": "src/app/store/state/app-state.ts",
            "type": "interface",
            "sourceCode": "import { createFeatureSelector } from '@ngrx/store';\nimport * as ActionReducer from './../reducer/user-reducer';\n\n\n\nexport interface AppState {\n  authState: ActionReducer.State;\n}\n\nexport const reducers = {\n  auth: ActionReducer.reducer\n};\n\nexport const selectAuthState = createFeatureSelector<AppState>('auth');\n",
            "properties": [
                {
                    "name": "authState",
                    "type": "ActionReducer.State",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-8fba5e667608ab435ea686db364c568b",
            "file": "src/app/store/reducer/user-reducer.ts",
            "type": "interface",
            "sourceCode": "import { UserActions, UserActionTypes } from '../actions/user-actions';\nimport { User } from '../../models/user.model';\n\nexport interface State {\n  isAuthenticated: boolean;\n  user: User | null;\n  responseMessage: string | null;\n}\n\nexport const initialState: State = {\n  isAuthenticated: false,\n  user: null,\n  responseMessage: null,\n};\n\nexport function reducer(state = initialState, action: UserActions): State {\n  switch (action.type) {\n    case UserActionTypes.LOGIN_SUCCESS: {\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: {\n          email: action.payload.email\n        },\n        responseMessage: 'Success',\n      };\n    }\n    case UserActionTypes.LOGIN_FAILURE: {\n      return {\n        ...state,\n        responseMessage: action.payload\n      };\n    }\n    case UserActionTypes.SIGNUP_SUCCESS: {\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: {\n          email: action.payload.email,\n        },\n        responseMessage: 'User Created'\n      };\n    }\n    case UserActionTypes.SIGNUP_FAILURE: {\n      return {\n        ...state,\n        responseMessage: action.payload\n      };\n    }\n    case UserActionTypes.LOGOUT: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\n",
            "properties": [
                {
                    "name": "isAuthenticated",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "responseMessage",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "user",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiServiceService",
            "id": "injectable-ApiServiceService-b16c14585e72235465b1c9baa1519b62",
            "file": "src/app/service/api/api-service.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "user",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "user",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeToken",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string"
                        },
                        {
                            "name": "email",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceService {\n  constructor(private http: HttpClient) {}\n\n  login(user: User): Observable<any> {\n    return this.http\n      .post<User>(environment.loginURL, user);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post<User>(environment.registrationURL, user);\n  }\n\n\n  setToken(token: string, email: string) {\n    const userData = {\n      token,\n      email\n    };\n    sessionStorage.setItem('userToken', JSON.stringify(userData));\n  }\n\n  getToken() {\n    return JSON.parse(sessionStorage.getItem('userToken'));\n  }\n\n  removeToken() {\n    sessionStorage.clear();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthEffects",
            "id": "injectable-AuthEffects-8a84cd7390dd6923e44cba077c84c01b",
            "file": "src/app/store/effect/user-effect.ts",
            "properties": [
                {
                    "name": "LogIn",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.LOGIN),\n    map((action: LogIn) => action.payload),\n    switchMap((payload) => {\n      return this.apiService.login(payload).pipe(\n        map((user) => {\n          const userData = new User();\n          userData.email = payload.email;\n          userData.accessToken = user;\n          return new LogInSuccess(userData);\n        }),\n        catchError((error) => {\n          return of(new LogInFailure({ error: error.error }));\n        })\n      );\n    })\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "LogInFailure",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.LOGIN_FAILURE)\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "LogInSuccess",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.LOGIN_SUCCESS),\n    tap((user) => {\n      this.apiService.setToken(user.payload.accessToken.accessToken , user.payload.email);\n      this.router.navigate(['/books']);\n    })\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "LogOut",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.LOGOUT),\n    tap(() => {\n      this.apiService.removeToken();\n      this.router.navigate(['/login']);\n    })\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "SignUp",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP),\n      map((action: SignUp) => action.payload),\n      switchMap(payload => {\n        return this.apiService.register(payload).pipe(\n          map((user) => {\n            return new SignUpSuccess(user);\n          }),\n          catchError((error) => {\n            return of(new SignUpFailure({  error: error.error }));\n          })\n          );\n      })\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": ""
                        }
                    ]
                },
                {
                    "name": "SignUpFailure",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP_FAILURE)\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                },
                {
                    "name": "SignUpSuccess",
                    "defaultValue": "this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP_SUCCESS),\n    tap((user) => {\n      this.router.navigate(['/login']);\n    })\n  )",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "decorators": [
                        {
                            "name": "Effect",
                            "stringifiedArguments": "{dispatch: false}"
                        }
                    ]
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap, mergeMap } from 'rxjs/operators';\nimport { tap } from 'rxjs/operators';\nimport { ApiServiceService } from '../../service/api/api-service.service';\nimport {\n  UserActionTypes,\n  LogInSuccess,\n  LogInFailure,\n  LogIn,\n  SignUp,\n  SignUpSuccess,\n  SignUpFailure,\n} from '../actions/user-actions';\nimport { Observable, of } from 'rxjs';\nimport { User } from '../../models/user.model';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions: Actions,\n    private apiService: ApiServiceService,\n    private router: Router\n  ) {}\n\n\n  @Effect()\n  LogIn: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.LOGIN),\n    map((action: LogIn) => action.payload),\n    switchMap((payload) => {\n      return this.apiService.login(payload).pipe(\n        map((user) => {\n          const userData = new User();\n          userData.email = payload.email;\n          userData.accessToken = user;\n          return new LogInSuccess(userData);\n        }),\n        catchError((error) => {\n          return of(new LogInFailure({ error: error.error }));\n        })\n      );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  LogInSuccess: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.LOGIN_SUCCESS),\n    tap((user) => {\n      this.apiService.setToken(user.payload.accessToken.accessToken , user.payload.email);\n      this.router.navigate(['/books']);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  LogInFailure: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.LOGIN_FAILURE)\n  );\n\n  @Effect()\n  SignUp: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP),\n      map((action: SignUp) => action.payload),\n      switchMap(payload => {\n        return this.apiService.register(payload).pipe(\n          map((user) => {\n            return new SignUpSuccess(user);\n          }),\n          catchError((error) => {\n            return of(new SignUpFailure({  error: error.error }));\n          })\n          );\n      })\n  );\n\n  @Effect({ dispatch: false })\n  SignUpSuccess: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP_SUCCESS),\n    tap((user) => {\n      this.router.navigate(['/login']);\n    })\n  );\n\n  @Effect({ dispatch: false })\n  SignUpFailure: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.SIGNUP_FAILURE)\n  );\n\n  @Effect({ dispatch: false })\n  public LogOut: Observable<any> = this.actions.pipe(\n    ofType(UserActionTypes.LOGOUT),\n    tap(() => {\n      this.apiService.removeToken();\n      this.router.navigate(['/login']);\n    })\n  );\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "actions",
                        "type": "Actions"
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "actions",
                        "type": "Actions",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BookService",
            "id": "injectable-BookService-092c4b07eea6f4bac6e8e9f79c346b34",
            "file": "src/app/service/book-service/book.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addBookData",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteBookById",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBook",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "getBookById",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateBookData",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../../models/user.model';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(\n    private httpCLient: HttpClient\n  ) { }\n\n  getBook(): Observable<any> {\n    return this.httpCLient.get(environment.hostURL);\n  }\n\n  getBookById(id): Observable<any> {\n    return this.httpCLient.get(environment.hostURL + '/' + id);\n  }\n\n  deleteBookById(id): Observable<any> {\n    return this.httpCLient.delete(environment.hostURL + '/' + id);\n  }\n\n  addBookData(data): Observable<any>{\n    return this.httpCLient.post(environment.hostURL , data);\n  }\n\n  updateBookData(data): Observable<any> {\n    return this.httpCLient.put(environment.hostURL + '/' + data.id , data);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "httpCLient",
                        "type": "HttpClient"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "httpCLient",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-cad9fadfdeb33bc095551acbc3b86ff5",
            "file": "src/app/service/theme.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import {BehaviorSubject, Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class ThemeService {\n\n  get theme(): string {\n    return document.documentElement.getAttribute('theme');\n  }\n\n  set theme(name: string) {\n    document.documentElement.setAttribute('theme', name);\n  }\n}\n",
            "accessors": {
                "theme": {
                    "name": "theme",
                    "setSignature": {
                        "name": "theme",
                        "type": "void",
                        "args": [
                            {
                                "name": "name",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "name",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "theme",
                        "type": "string",
                        "returnType": "string",
                        "line": 7
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FormModalButtonComponent",
            "id": "class-FormModalButtonComponent-cb666af6f32599df2ec19a1099d8c81a",
            "file": "src/web-components/form-modal-button.ts",
            "type": "class",
            "sourceCode": "import { LitElement, html, css , property , customElement} from 'lit-element';\n\n@customElement('form-modal-button-component')\nexport class FormModalButtonComponent extends LitElement {\n  buttonlabel: string;\n\n  constructor() {\n    super();\n    this.buttonlabel = '';\n  }\n\n  static get styles(){\n    return css`\n    .Save , .Cancel , .Delete ,.Annuler, .sauvegarder , .Effacer{\n        background-color: #fff;\n        color: black;\n        padding: 12px 20px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        float: right;\n        margin: 0 5px;\n        border: 1px solid darkgray;\n      }\n      .Save, .Delete ,.sauvegarder , .Effacer{\n        background-color: #4CAF50;\n        color: #fff;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n      <button class=\"${this.buttonlabel}\" @click=\"${this._handleClick}\">${this.buttonlabel}</button>\n      <slot></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      buttonlabel: { type: String }\n    };\n  }\n\n  _handleClick(e) {\n    console.log('eeee');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 5
            },
            "properties": [
                {
                    "name": "buttonlabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [
                {
                    "name": "_handleClick",
                    "args": [
                        {
                            "name": "e",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "render",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "extends": "LitElement",
            "accessors": {
                "styles": {
                    "name": "styles",
                    "getSignature": {
                        "name": "styles",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                },
                "properties": {
                    "name": "properties",
                    "getSignature": {
                        "name": "properties",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                }
            }
        },
        {
            "name": "LogIn",
            "id": "class-LogIn-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "User"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "User",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.LOGIN",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LogInFailure",
            "id": "class-LogInFailure-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.LOGIN_FAILURE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LogInSuccess",
            "id": "class-LogInSuccess-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "User"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "User",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.LOGIN_SUCCESS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "LogOut",
            "id": "class-LogOut-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.LOGOUT",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "MyButtonComponent",
            "id": "class-MyButtonComponent-ab6301401546ec9bf4ecc428e126c37f",
            "file": "src/web-components/my-button.ts",
            "type": "class",
            "sourceCode": "import { LitElement, html, css , property , customElement} from 'lit-element';\n\n@customElement('my-button-component')\nexport class MyButtonComponent extends LitElement {\n  buttonName: string;\n\n  constructor() {\n    super();\n    this.buttonName = '';\n  }\n\n  static get styles(){\n    return css`\n    .Login , .Register {\n      background-color: #4CAF50;\n      color: white;\n      padding: 16px 20px;\n      margin: 8px 0;\n      border: none;\n      cursor: pointer;\n      width: 100%;\n      opacity: 0.9;\n    }\n\n    .Register{\n      background-color: #2196F3;\n    }\n\n    .Cancel,  .Sign-up{\n      color: white;\n      padding: 16px 20px;\n      margin: 8px 0;\n      border: none;\n      cursor: pointer;\n      width: 100%;\n      opacity: 0.9;\n      background-color: #f44336;\n    }\n\n    .Sign-up{\n      background-color: #4CAF50;\n    }\n    `;\n  }\n\n  render() {\n    return html`\n      <button class=\"${this.buttonName}\" @click=\"${this._handleClick}\">${this.buttonName}</button>\n      <slot></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      buttonName: { type: String }\n    };\n  }\n\n  _handleClick(e) {\n    console.log('eeee');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 5
            },
            "properties": [
                {
                    "name": "buttonName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [
                {
                    "name": "_handleClick",
                    "args": [
                        {
                            "name": "e",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "render",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "extends": "LitElement",
            "accessors": {
                "styles": {
                    "name": "styles",
                    "getSignature": {
                        "name": "styles",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                },
                "properties": {
                    "name": "properties",
                    "getSignature": {
                        "name": "properties",
                        "type": "",
                        "returnType": "",
                        "line": 53
                    }
                }
            }
        },
        {
            "name": "SignUp",
            "id": "class-SignUp-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.SIGNUP",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SignUpFailure",
            "id": "class-SignUpFailure-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any"
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.SIGNUP_FAILURE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SignUpSuccess",
            "id": "class-SignUpSuccess-b80fdc0b89db08a4387709c81c8cfcbd",
            "file": "src/app/store/actions/user-actions.ts",
            "type": "class",
            "sourceCode": "import { User } from '../../models/user.model';\nimport { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  LOGIN = '[User] Login',\n  LOGIN_SUCCESS = '[User] Login Success',\n  LOGIN_FAILURE = '[User] Login Failure',\n  SIGNUP = '[User] Signup',\n  SIGNUP_SUCCESS = '[User] Signup Success',\n  SIGNUP_FAILURE = '[User] Signup Failure',\n  LOGOUT = '[User] Logout',\n}\n\nexport class LogIn implements Action {\n  readonly type = UserActionTypes.LOGIN;\n  constructor(public payload: User) {}\n}\nexport class LogInSuccess implements Action {\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\nexport class LogInFailure implements Action {\n  readonly type = UserActionTypes.LOGIN_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class SignUp implements Action {\n  readonly type = UserActionTypes.SIGNUP;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpSuccess implements Action {\n  readonly type = UserActionTypes.SIGNUP_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class SignUpFailure implements Action {\n  readonly type = UserActionTypes.SIGNUP_FAILURE;\n  constructor(public payload: any) {}\n}\n\nexport class LogOut implements Action {\n  readonly type = UserActionTypes.LOGOUT;\n}\n\nexport type UserActions = LogIn | LogInSuccess | LogInFailure | SignUp\n  | SignUpSuccess\n  | SignUpFailure\n  | LogOut;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "any"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "UserActionTypes.SIGNUP_SUCCESS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "StoreMocks",
            "id": "class-StoreMocks-c031f4bb673de5b4a57dc3f89766ada3",
            "file": "src/app/common/mock/mock-store.ts",
            "type": "class",
            "sourceCode": "import { of } from 'rxjs';\n\nexport class StoreMocks {\n     public static getMockStoreService = () => {\n          return {\n               dispatch: jest.fn(() => { }),\n          }\n     };\n\n     public static getApiService = () => {\n          return {\n               login: jest.fn((user) => { }),\n               register: jest.fn((user) => { }),\n               setToken: jest.fn((token, email) => { }),\n               getToken: jest.fn(() => {\n                    return {\n                         \"email\": \"abc@gmail.com\",\n                         \"token\": \"hsdjfhksdbfkjs\"\n                    }\n               }),\n               removeToken: jest.fn(() => { }),\n          }\n     };\n\n     public static getBookService = () => {\n          return {\n               getBook: jest.fn(() => {\n                    return of([\n                         {\n                              id: \"EA4JwK6\",\n                              title: \"fd\",\n                              subtitle: \"fdg\",\n                              author: \"fdg\",\n                              published: \"fdgfdg\",\n                              publisher: \"fdgdfg\",\n                              pages: \"fgdfgdf\",\n                              description: \"fdgdf\",\n                              website: \"fdgdf\",\n                              createdBy: \"abc@gmail.com\"\n                         }\n                    ])\n               }),\n               updateBookData: jest.fn((data) => of({})),\n               getBookById: jest.fn((id) => { }),\n               deleteBookById: jest.fn((id) => { }),\n               addBookData: jest.fn((data) => of({})),\n          }\n     };\n\n     public static getMockRouterService = () => {\n          return {\n               navigate: jest.fn((nav) => { })\n          }\n     }\n}",
            "properties": [
                {
                    "name": "getApiService",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "getBookService",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "getMockRouterService",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "getMockStoreService",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StorybookMock",
            "id": "class-StorybookMock-8d8ea5682ee9f40caf4131cd627c8fc7",
            "file": "src/stories/storybookMocks.ts",
            "type": "class",
            "sourceCode": "import { FormBuilder, FormControl, Validators } from '@angular/forms';\nexport class StorybookMock {\n    public static getBookFormMock = () => {\n        const bookForm = {\n            id: null,\n            title: '',\n            subtitle: '',\n            author: '',\n            published: '',\n            publisher: '',\n            pages: '',\n            description: '',\n            website: '',\n            createdBy: '',\n        };\n        const fb = new FormBuilder();\n        return fb.group(bookForm);\n    };\n\n\n    public static getLoginFormMock = () => {\n        const loginForm = {\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n        };\n        const fb = new FormBuilder();\n        return fb.group(loginForm);\n    };\n\n    public static getSignUpFormMock = () => {\n        const registerForm = {\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n        };\n        const fb = new FormBuilder();\n        return fb.group(registerForm);\n    };\n}",
            "properties": [
                {
                    "name": "getBookFormMock",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "getLoginFormMock",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "getSignUpFormMock",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-f677ae2033c3c086048a90d34386af76",
            "file": "src/app/models/user.model.ts",
            "type": "class",
            "sourceCode": "export class User {\n  id?: string;\n  email?: string;\n  password?: string;\n  accessToken?: string;\n}\n",
            "properties": [
                {
                    "name": "accessToken",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "ActionBookComponent",
            "id": "component-ActionBookComponent-e121449ebc90f54e33a792efe7aaf750",
            "file": "src/stories/action-book-component/action-book.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-book",
            "styleUrls": [
                "./../../app/components/action-book/action-book.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/components/action-book/action-book.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-action-book',\n    templateUrl: './../../app/components/action-book/action-book.component.html',\n    styleUrls: ['./../../app/components/action-book/action-book.component.css']\n})\nexport class ActionBookComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n:host {\n\tposition: fixed;\n\ttop: 0;\n\tdisplay: flex;\n\tright: 0;\n\tbackground: rgba(0, 0, 0, 0.32);\n\theight: 100vh;\n\twidth: 100%;\n\tz-index: 999;\n\tjustify-content: center;\n  align-items: center;\n}\n\n.modal{\n  width: 50%;\n\tmin-height: 90vh;\n\tmax-height: 90vh;\n\toverflow-x: auto;\n\tbackground: var(--modal-background);\n\tborder-radius: 4px;\n\tdisplay: flex;\n\tjustify-content: center;\n  position: relative;\n}\n\n.close-icon{\n  top: 18px;\n  right: 18px;\n  position: absolute;\n  cursor: pointer;\n}\n\ninput {\n  width: 100%;\n  padding: 12px 50px 12px 15px;\n  margin: 8px 0;\n  box-sizing: border-box;\n}\n\n.row {\n  display: flex;\n}\n\n.column {\n  flex: 50%;\n  padding: 10px;\n}\n\nlabel{\n  font-weight: 600;\n  color: var(--label-text-color);\n}\n#isbn{\n  background-color: #dddddd;\n}\n\n\n@media (min-width: 320px) and (max-width: 767px) {\n\t.modal-body {\n\t\tmax-height: 59vh;\n\t\tmin-height: 59vh;\n\t}\n\n\t.modal {\n\t\twidth: 100%;\n\t\tmin-height: 90vh;\n    max-height: 90vh;\n  }\n  \n  .row {\n    display: block;\n  }\n  \n  .column {\n    flex: 100%;\n  }\n}",
                    "styleUrl": "./../../app/components/action-book/action-book.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"modal\">\n  <span class=\"close-icon\" (click)= \"onClose()\" (keyup.enter)=\"onClose()\" aria-label=\"Close\"><em style=\"font-size: 24px\" class=\"fa\">&#xf00d;</em></span>\n  <div class=\"modal-body\">\n    <h2 style=\"text-align: center;\">{{ editNew }} {{'BOOK_FORM_MODAL.BOOK_LABEL' | translate}}</h2>\n    <form [formGroup]= \"bookForm\" novalidate>\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"isbn\">{{'BOOK_FORM_MODAL.BOOK_ISBN' | translate}}</label>\n          <input type=\"text\" formControlName=\"id\" id=\"isbn\" readonly/>\n        </div>\n        <div class=\"column\">\n          <label for=\"title\">{{'BOOK_FORM_MODAL.BOOK_TITLE' | translate}}</label>\n          <input type=\"text\" formControlName=\"title\" id=\"title\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"subtitle\">{{'BOOK_FORM_MODAL.BOOK_SUBTITLE' | translate}}</label>\n          <input type=\"text\" formControlName=\"subtitle\" id=\"subtitle\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"author\">{{'BOOK_FORM_MODAL.BOOK_AUTHOR' | translate}}</label>\n          <input type=\"text\" formControlName=\"author\" id=\"author\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"published\">{{'BOOK_FORM_MODAL.BOOK_PUBLISHED' | translate}}</label>\n          <input type=\"text\" formControlName=\"published\" id=\"published\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"publisher\">{{'BOOK_FORM_MODAL.BOOK_PUBLISHER' | translate}}</label>\n          <input type=\"text\" formControlName=\"publisher\" id=\"publisher\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"page\">{{'BOOK_FORM_MODAL.BOOK_PAGES' | translate}}</label>\n          <input type=\"text\" formControlName=\"pages\" id=\"page\" aria-label=\"page\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"description\">{{'BOOK_FORM_MODAL.BOOK_DESCRIPTION' | translate}}</label>\n          <input type=\"text\" formControlName=\"description\" id=\"description\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"website\">{{'BOOK_FORM_MODAL.BOOK_WEBSITE' | translate}}</label>\n          <input type=\"text\" formControlName=\"website\" id=\"website\"/>\n        </div>\n      </div>\n\n      <form-modal-button-component buttonlabel=\"{{'BOOK_FORM_MODAL.SAVE_BUTTON' | translate}}\" (click)= \"onSubmit(bookForm)\" (keyup.enter)=\"onSubmit(bookForm)\" aria-label=\"Save the book form\"></form-modal-button-component>\n      <form-modal-button-component buttonlabel=\"{{'BOOK_FORM_MODAL.CANCEL_BUTTON' | translate}}\"(click)= \"onClose()\" (keyup.enter) =\"onClose()\" aria-label=\"Close the modal form\"></form-modal-button-component>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "ActionBookComponent",
            "id": "component-ActionBookComponent-43dd0b214c660138f22803082972bc9a-1",
            "file": "src/app/components/action-book/action-book.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-book",
            "styleUrls": [
                "./action-book.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./action-book.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "editData",
                    "defaultValue": "{}",
                    "line": 16,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "getData",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bookForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "editNew",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "userEmailId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "editFormData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output ,Input} from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { BookService } from '../../service/book-service/book.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as _ from 'underscore';\nimport { ApiServiceService } from '../../service/api/api-service.service';\n\n@Component({\n  selector: 'app-action-book',\n  templateUrl: './action-book.component.html',\n  styleUrls: ['./action-book.component.css']\n})\nexport class ActionBookComponent implements OnInit {\n  @Output() closeModal = new EventEmitter();\n  @Output() getData = new EventEmitter();\n  @Input() editData: any = {};\n  bookForm: FormGroup;\n  userEmailId: string;\n  editNew: string;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private bookService: BookService,\n    private toastrService: ToastrService,\n    private apiService: ApiServiceService,\n  ) { }\n\n  ngOnInit(): void {\n    this.bookForm = this.formBuilder.group({\n      id: null,\n      title: '',\n      subtitle: '',\n      author: '',\n      published: '',\n      publisher: '',\n      pages: '',\n      description: '',\n      website: '',\n      createdBy: '',\n    });\n    this.editFormData();\n    const user = this.apiService.getToken();\n    this.userEmailId = user.email;\n  }\n\n\n  editFormData(): void {\n    this.editNew = '';\n    if (!_.isEmpty(this.editData)) {\n      this.bookForm.patchValue(this.editData);\n      this.editNew = 'Edit';\n    } else {\n      this.editNew = 'New';\n    }\n  }\n\n  onSubmit(form: FormGroup): void {\n      this.bookForm.value.createdBy = this.userEmailId;\n      if (form.value.id === null) {\n        this.bookService.addBookData(form.value).subscribe(data => {\n          this.getData.emit();\n          this.closeModal.emit();\n          this.toastrService.success('Saved Successfully');\n        });\n      } else {\n        this.bookService.updateBookData(form.value).subscribe(data => {\n          this.getData.emit();\n          this.closeModal.emit(); \n          this.toastrService.success('Updated Successfully');\n        });\n      }\n  }\n  \n  onClose(){\n    this.closeModal.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n:host {\n\tposition: fixed;\n\ttop: 0;\n\tdisplay: flex;\n\tright: 0;\n\tbackground: rgba(0, 0, 0, 0.32);\n\theight: 100vh;\n\twidth: 100%;\n\tz-index: 999;\n\tjustify-content: center;\n  align-items: center;\n}\n\n.modal{\n  width: 50%;\n\tmin-height: 90vh;\n\tmax-height: 90vh;\n\toverflow-x: auto;\n\tbackground: var(--modal-background);\n\tborder-radius: 4px;\n\tdisplay: flex;\n\tjustify-content: center;\n  position: relative;\n}\n\n.close-icon{\n  top: 18px;\n  right: 18px;\n  position: absolute;\n  cursor: pointer;\n}\n\ninput {\n  width: 100%;\n  padding: 12px 50px 12px 15px;\n  margin: 8px 0;\n  box-sizing: border-box;\n}\n\n.row {\n  display: flex;\n}\n\n.column {\n  flex: 50%;\n  padding: 10px;\n}\n\nlabel{\n  font-weight: 600;\n  color: var(--label-text-color);\n}\n#isbn{\n  background-color: #dddddd;\n}\n\n\n@media (min-width: 320px) and (max-width: 767px) {\n\t.modal-body {\n\t\tmax-height: 59vh;\n\t\tmin-height: 59vh;\n\t}\n\n\t.modal {\n\t\twidth: 100%;\n\t\tmin-height: 90vh;\n    max-height: 90vh;\n  }\n  \n  .row {\n    display: block;\n  }\n  \n  .column {\n    flex: 100%;\n  }\n}",
                    "styleUrl": "./action-book.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "bookService",
                        "type": "BookService"
                    },
                    {
                        "name": "toastrService",
                        "type": "ToastrService"
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bookService",
                        "type": "BookService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastrService",
                        "type": "ToastrService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ActionBookComponent-1",
            "templateData": "<div class=\"modal\">\n  <span class=\"close-icon\" (click)= \"onClose()\" (keyup.enter)=\"onClose()\" aria-label=\"Close\"><em style=\"font-size: 24px\" class=\"fa\">&#xf00d;</em></span>\n  <div class=\"modal-body\">\n    <h2 style=\"text-align: center;\">{{ editNew }} {{'BOOK_FORM_MODAL.BOOK_LABEL' | translate}}</h2>\n    <form [formGroup]= \"bookForm\" novalidate>\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"isbn\">{{'BOOK_FORM_MODAL.BOOK_ISBN' | translate}}</label>\n          <input type=\"text\" formControlName=\"id\" id=\"isbn\" readonly/>\n        </div>\n        <div class=\"column\">\n          <label for=\"title\">{{'BOOK_FORM_MODAL.BOOK_TITLE' | translate}}</label>\n          <input type=\"text\" formControlName=\"title\" id=\"title\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"subtitle\">{{'BOOK_FORM_MODAL.BOOK_SUBTITLE' | translate}}</label>\n          <input type=\"text\" formControlName=\"subtitle\" id=\"subtitle\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"author\">{{'BOOK_FORM_MODAL.BOOK_AUTHOR' | translate}}</label>\n          <input type=\"text\" formControlName=\"author\" id=\"author\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"published\">{{'BOOK_FORM_MODAL.BOOK_PUBLISHED' | translate}}</label>\n          <input type=\"text\" formControlName=\"published\" id=\"published\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"publisher\">{{'BOOK_FORM_MODAL.BOOK_PUBLISHER' | translate}}</label>\n          <input type=\"text\" formControlName=\"publisher\" id=\"publisher\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"page\">{{'BOOK_FORM_MODAL.BOOK_PAGES' | translate}}</label>\n          <input type=\"text\" formControlName=\"pages\" id=\"page\" aria-label=\"page\"/>\n        </div>\n        <div class=\"column\">\n          <label for=\"description\">{{'BOOK_FORM_MODAL.BOOK_DESCRIPTION' | translate}}</label>\n          <input type=\"text\" formControlName=\"description\" id=\"description\"/>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\">\n          <label for=\"website\">{{'BOOK_FORM_MODAL.BOOK_WEBSITE' | translate}}</label>\n          <input type=\"text\" formControlName=\"website\" id=\"website\"/>\n        </div>\n      </div>\n\n      <form-modal-button-component buttonlabel=\"{{'BOOK_FORM_MODAL.SAVE_BUTTON' | translate}}\" (click)= \"onSubmit(bookForm)\" (keyup.enter)=\"onSubmit(bookForm)\" aria-label=\"Save the book form\"></form-modal-button-component>\n      <form-modal-button-component buttonlabel=\"{{'BOOK_FORM_MODAL.CANCEL_BUTTON' | translate}}\"(click)= \"onClose()\" (keyup.enter) =\"onClose()\" aria-label=\"Close the modal form\"></form-modal-button-component>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6a4f2a3b31a4d24ef8ff0db72cd38784",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getState",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "response",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "'tavsica-project'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "translate",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getResponseData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store } from '@ngrx/store';\nimport { AppState, selectAuthState } from './store/state/app-state';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'tavsica-project';\n  getState: Observable<any>;\n  response: any;\n  constructor(\n    public translate: TranslateService,\n    private store: Store<AppState>,\n    private toastService: ToastrService\n  ) {\n    translate.addLangs(['en', 'fr']);\n    translate.setDefaultLang('en');\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n    this.getState = this.store.select(selectAuthState);\n  }\n\n  ngOnInit(): void {\n    this.getResponseData();\n  }\n\n  getResponseData() {\n    this.getState.subscribe((state) => {\n      this.response = state.responseMessage;\n      if (this.response !== null) {\n        if (state.isAuthenticated) {\n            this.toastService.success('Logged In Successfully');\n        } else if (this.response === 'User Created') {\n          this.toastService.info('User Registered Successfully');\n        } else {\n          this.toastService.info(this.response.error);\n        }\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\n  height: 100%;\n  width: 100%;\n\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: max-content max-content auto max-content;\n  grid-template-areas:\n    \"header\"\n    \"navbar\"\n    \"content\"\n    \"footer\";\n}\napp-header {\n  grid-area: header;\n}\n\napp-navbar {\n  grid-area: navbar;\n}\n\n/* app-sidebar {\n  grid-area: sidebar;\n} */\n\n/* app-footer {\n  grid-area: footer;\n} */\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService"
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>"
                    },
                    {
                        "name": "toastService",
                        "type": "ToastrService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastService",
                        "type": "ToastrService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AuthLayoutComponent",
            "id": "component-AuthLayoutComponent-33aecb29513efa98b2376045046febcf",
            "file": "src/app/common/auth-layout/auth-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-layout",
            "styleUrls": [
                "./auth-layout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./auth-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ɵConsole } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./auth-layout.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "BooksComponent",
            "id": "component-BooksComponent-71ead67d56b511ff02351aa9d32b453c",
            "file": "src/stories/books/books.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-books",
            "styleUrls": [
                "./../../app/components/books/books.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/components/books/books.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-books',\n    templateUrl: './../../app/components/books/books.component.html',\n    styleUrls: ['./../../app/components/books/books.component.css']\n})\nexport class BooksComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.table-class {\n  margin: 10px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n\n.actionDelete:hover,\n.actionEdit:hover {\n  text-decoration: underline;\n  cursor: pointer;\n}\n.actionDelete {\n  color: var(--color-red);\n  margin: 0 10px;\n}\n\n.actionEdit {\n  color: var(--color-blue);\n}\n\n.text-end {\n  margin: 20px;\n}\n\n.add-button {\n  float: right;\n  border: none;\n  font-size: 23px;\n  cursor: pointer;\n}\n\n.text-color{\n  color: var(--text-color);\n}\n\n\n\n\ntable { \n  border-collapse: collapse;\n  width: 100%;\n  color:var(--color-black);\n\t}\n\n\n  tr:nth-of-type(odd) {\n    background: var(--color-Whisper);\n  }\n  \n  tr:nth-of-type(even) {\n    background: var(--tr-nth-even);\n  }\n\n  th {\n    background: var(--table-header-background);\n    color: var(--color-white);\n    font-weight: bold;\n  }\n\n  td,\n  th {\n    padding: 15px;\n    border-bottom: 1px solid var(--color-light-grey);\n    text-align: left;\n    font-size: 15px;\n  }\n\n  td > div {\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 90%;\n  }  \n  \n  table > td {\n    table-layout: fixed;\n    width: 50px;\n    overflow: hidden;\n  }\n\n  @media only screen and (max-width: 600px)  {\n\n\ttable { \n    max-width: 100%;\n\t}\n\n\ttable, thead, tbody, th, td, tr { \n\t\tdisplay: block; \n\t}\n\t\n\tthead tr { \n\t\tposition: absolute;\n\t\ttop: -9999px;\n\t\tleft: -9999px;\n\t}\n\t\n\ttr { border: 1px solid #ccc; }\n\t\n\ttd { \n\t\tborder: none;\n\t\tborder-bottom: 1px solid #eee; \n\t\tposition: relative;\n\t\tpadding-left: 50%; \n\t}\n\n\ttd:before { \n\t\tposition: absolute;\n\t\ttop: 6px;\n\t\tleft: 6px;\n\t\twidth: 45%; \n\t\tpadding-right: 10px; \n\t\twhite-space: nowrap;\n\t\tcontent: attr(data-col);\n\t\tcolor: #000;\n\t\tfont-weight: bold;\n  }\n  \n  tr:nth-of-type(odd) {\n    background: ghostwhite;\n  }\n\n  tr:nth-of-type(even) {\n    background: whitesmoke;\n  }\n}",
                    "styleUrl": "./../../app/components/books/books.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "  <div class=\"text-end\">\n    <span class=\"text-color\">\n      <strong>{{ 'TABLE_DETAILS.TABLE_COUNT' | translate }}\n        {{ bookData?.length }}\n      </strong>\n    </span>\n    <span class=\"add-button\" tabindex=0 (click)= \"addBook()\" (keyup.enter)=\"addBook()\" ><i class=\"fa fa-plus\" aria-label=\"Click to add book data\" title=\"Add book\"></i></span>\n  </div>\n\n  <div class= \"table-class\" *ngIf= \"bookData?.length != 0; else noData\" id=\"book-table\">\n  <table summary=\"Book information for author, title, website, publisher\">\n    <thead>\n        <tr>\n          <th scope=\"col\" *ngFor=\"let col of columns\" title=\"{{ 'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate }}\"> \n          <div>{{ 'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate }}</div>  \n          </th>\n          <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor= \"let data of bookData\">\n        <td attr.data-col= \"{{'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate}}\" *ngFor=\"let col of columns\" style=\"cursor: pointer\"  title=\"{{ data[col] }}\">\n        <div> {{ data[col.title] }}</div>\n        </td>\n        <td data-col=\"Actions\">\n          <span class=\"actionEdit\" (click)=\"onEdit(data.id)\" (keyup.enter)=\"onEdit(data.id)\" title=\"Edit\" tabindex=0><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></span>\n          <span class=\"actionDelete\" (click)=\"onDelete(data.id)\" (keyup.enter)=\"onDelete(data.id)\" title=\"Delete\" tabindex=0><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #noData>\n  <p style=\"text-align: center;\">No data available</p>\n</ng-template>\n\n\n<app-delete  *ngIf= \"deleteForm\"(closeModal)= \"closeModal()\" (deleteModal)= \"deleteBook()\"\naria-label=\"Opens delete book form modal\"\n></app-delete>\n\n<app-action-book\n*ngIf= \"openFormModal\"\n[editData]= \"editFormData\"\n(closeModal)= \"closeFormModal()\"\n(getData)= \"getData()\"\naria-label= \"Opens book form modal\"\n></app-action-book>"
        },
        {
            "name": "BooksComponent",
            "id": "component-BooksComponent-225cb55e88c49b468464a76dc37b039f-1",
            "file": "src/app/components/books/books.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-books",
            "styleUrls": [
                "./books.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./books.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bookData",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "columns",
                    "defaultValue": "[\n      { key: 'HEADER_TEXT_1' , title:'title'},\n      { key: 'HEADER_TEXT_2' , title:'author'},\n      { key: 'HEADER_TEXT_3' , title:'website'},\n      { key: 'HEADER_TEXT_4', title: 'publisher' },\n    ]",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "deleteForm",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "deleteId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "editFormData",
                    "defaultValue": "{}",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "openFormModal",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "addBook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70
                },
                {
                    "name": "closeFormModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79
                },
                {
                    "name": "deleteBook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61
                },
                {
                    "name": "getBookData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit} from '@angular/core';\nimport { BookService } from '../../service/book-service/book.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as _ from 'underscore';\nimport { ApiServiceService } from '../../service/api/api-service.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css'],\n})\nexport class BooksComponent implements OnInit {\n  columns: any =\n    [\n      { key: 'HEADER_TEXT_1' , title:'title'},\n      { key: 'HEADER_TEXT_2' , title:'author'},\n      { key: 'HEADER_TEXT_3' , title:'website'},\n      { key: 'HEADER_TEXT_4', title: 'publisher' },\n    ];\n\n  editFormData: any = {};\n  openFormModal: boolean = false;\n  bookData: any;\n\n  deleteForm: boolean = false;\n  deleteId: string;\n  constructor(\n    private bookService: BookService,\n    private toastrService: ToastrService,\n    private apiService: ApiServiceService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getBookData();\n  }\n\n  getBookData(): void {\n    let responseData = [];\n    const userToken = this.apiService.getToken();\n    const emailId = userToken.email;\n    console.log('emailId', emailId);\n    this.bookService.getBook().subscribe((data) => {\n      responseData = data;\n      this.bookData = responseData.filter(obj => obj.createdBy === emailId);\n    });\n  }\n\n  onEdit(id: string): void {\n    this.bookService.getBookById(id).subscribe((data) => {\n      this.editFormData = data;\n      this.openFormModal = true;\n    });\n  }\n\n  onDelete(id: string): void {\n    this.deleteForm = true;\n    this.deleteId = id;\n  }\n\n  deleteBook(): void {\n    this.bookService.deleteBookById(this.deleteId).subscribe(() => {\n      this.deleteForm = false;\n      this.deleteId = '';\n      this.toastrService.info('Deleted Successfully');\n      this.getBookData();\n    });\n  }\n\n  addBook(): void {\n    this.openFormModal = true;\n  }\n\n  closeFormModal(): void {\n    this.openFormModal = false;\n    this.editFormData = {};\n  }\n\n  closeModal(): void {\n    this.deleteForm = false;\n    this.deleteId = '';\n  }\n\n  getData(): void {\n    this.getBookData();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.table-class {\n  margin: 10px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n}\n\n.actionDelete:hover,\n.actionEdit:hover {\n  text-decoration: underline;\n  cursor: pointer;\n}\n.actionDelete {\n  color: var(--color-red);\n  margin: 0 10px;\n}\n\n.actionEdit {\n  color: var(--color-blue);\n}\n\n.text-end {\n  margin: 20px;\n}\n\n.add-button {\n  float: right;\n  border: none;\n  font-size: 23px;\n  cursor: pointer;\n}\n\n.text-color{\n  color: var(--text-color);\n}\n\n\n\n\ntable { \n  border-collapse: collapse;\n  width: 100%;\n  color:var(--color-black);\n\t}\n\n\n  tr:nth-of-type(odd) {\n    background: var(--color-Whisper);\n  }\n  \n  tr:nth-of-type(even) {\n    background: var(--tr-nth-even);\n  }\n\n  th {\n    background: var(--table-header-background);\n    color: var(--color-white);\n    font-weight: bold;\n  }\n\n  td,\n  th {\n    padding: 15px;\n    border-bottom: 1px solid var(--color-light-grey);\n    text-align: left;\n    font-size: 15px;\n  }\n\n  td > div {\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 90%;\n  }  \n  \n  table > td {\n    table-layout: fixed;\n    width: 50px;\n    overflow: hidden;\n  }\n\n  @media only screen and (max-width: 600px)  {\n\n\ttable { \n    max-width: 100%;\n\t}\n\n\ttable, thead, tbody, th, td, tr { \n\t\tdisplay: block; \n\t}\n\t\n\tthead tr { \n\t\tposition: absolute;\n\t\ttop: -9999px;\n\t\tleft: -9999px;\n\t}\n\t\n\ttr { border: 1px solid #ccc; }\n\t\n\ttd { \n\t\tborder: none;\n\t\tborder-bottom: 1px solid #eee; \n\t\tposition: relative;\n\t\tpadding-left: 50%; \n\t}\n\n\ttd:before { \n\t\tposition: absolute;\n\t\ttop: 6px;\n\t\tleft: 6px;\n\t\twidth: 45%; \n\t\tpadding-right: 10px; \n\t\twhite-space: nowrap;\n\t\tcontent: attr(data-col);\n\t\tcolor: #000;\n\t\tfont-weight: bold;\n  }\n  \n  tr:nth-of-type(odd) {\n    background: ghostwhite;\n  }\n\n  tr:nth-of-type(even) {\n    background: whitesmoke;\n  }\n}",
                    "styleUrl": "./books.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "bookService",
                        "type": "BookService"
                    },
                    {
                        "name": "toastrService",
                        "type": "ToastrService"
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "bookService",
                        "type": "BookService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastrService",
                        "type": "ToastrService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiService",
                        "type": "ApiServiceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "BooksComponent-1",
            "templateData": "  <div class=\"text-end\">\n    <span class=\"text-color\">\n      <strong>{{ 'TABLE_DETAILS.TABLE_COUNT' | translate }}\n        {{ bookData?.length }}\n      </strong>\n    </span>\n    <span class=\"add-button\" tabindex=0 (click)= \"addBook()\" (keyup.enter)=\"addBook()\" ><i class=\"fa fa-plus\" aria-label=\"Click to add book data\" title=\"Add book\"></i></span>\n  </div>\n\n  <div class= \"table-class\" *ngIf= \"bookData?.length != 0; else noData\" id=\"book-table\">\n  <table summary=\"Book information for author, title, website, publisher\">\n    <thead>\n        <tr>\n          <th scope=\"col\" *ngFor=\"let col of columns\" title=\"{{ 'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate }}\"> \n          <div>{{ 'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate }}</div>  \n          </th>\n          <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor= \"let data of bookData\">\n        <td attr.data-col= \"{{'TABLE_DETAILS.TABLE_HEADER.' + col.key | translate}}\" *ngFor=\"let col of columns\" style=\"cursor: pointer\"  title=\"{{ data[col] }}\">\n        <div> {{ data[col.title] }}</div>\n        </td>\n        <td data-col=\"Actions\">\n          <span class=\"actionEdit\" (click)=\"onEdit(data.id)\" (keyup.enter)=\"onEdit(data.id)\" title=\"Edit\" tabindex=0><i class=\"fa fa-edit\" aria-hidden=\"true\"></i></span>\n          <span class=\"actionDelete\" (click)=\"onDelete(data.id)\" (keyup.enter)=\"onDelete(data.id)\" title=\"Delete\" tabindex=0><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #noData>\n  <p style=\"text-align: center;\">No data available</p>\n</ng-template>\n\n\n<app-delete  *ngIf= \"deleteForm\"(closeModal)= \"closeModal()\" (deleteModal)= \"deleteBook()\"\naria-label=\"Opens delete book form modal\"\n></app-delete>\n\n<app-action-book\n*ngIf= \"openFormModal\"\n[editData]= \"editFormData\"\n(closeModal)= \"closeFormModal()\"\n(getData)= \"getData()\"\naria-label= \"Opens book form modal\"\n></app-action-book>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DeleteComponent",
            "id": "component-DeleteComponent-60dc69dce1578a9d9115b27ffc3f3c7c",
            "file": "src/stories/delete-component/delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete",
            "styleUrls": [
                "./../../app/components/delete/delete.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/components/delete/delete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-delete',\n    templateUrl: './../../app/components/delete/delete.component.html',\n    styleUrls: ['./../../app/components/delete/delete.component.css']\n})\nexport class DeleteComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    position: fixed;\n    top: 0;\n    display: flex;\n    right: 0;\n    background: rgba(0, 0, 0, 0.32);\n    height: 100vh;\n    width: 100%;\n    z-index: 999;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .modal {\n    width: 40%;\n    min-height: 30vh;\n    overflow-x: auto;\n    background: #fff;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    position: relative;\n  }\n\n  .close-icon {\n    top: 18px;\n    right: 18px;\n    position: absolute;\n    cursor: pointer;\n  }\n\n  .body-text{\n      margin-bottom: 5rem;\n  }\n\n  .button-align{\n    float: right;\n  }",
                    "styleUrl": "./../../app/components/delete/delete.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"modal\">\n    <span class=\"close-icon\"><em style=\"font-size: 24px\" class=\"fa\"></em></span>\n    <div class=\"modal-body\">\n      <h2 style=\"text-align: center;\">{{ 'DELETE_FORM.HEADER_TEXT' | translate }}</h2>\n      <div class=\"body-text\">\n        {{ 'DELETE_FORM.BODY_TEXT' | translate }}\n        </div>\n\n        <div class=\"button-align\">\n          <form-modal-button-component buttonlabel=\"{{ 'DELETE_FORM.CANCEL_BUTTON' | translate }}\" (click)= \"onClose()\" (keyup.enter)=\"onClose()\" aria-label=\"Close the modal\"></form-modal-button-component>\n          <form-modal-button-component buttonlabel=\"{{ 'DELETE_FORM.DELETE_BUTTON' | translate }}\" (click)= \"onDelete()\" (keyup.enter)=\"onDelete()\" aria-label=\"Delete the selected item\"></form-modal-button-component>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "DeleteComponent",
            "id": "component-DeleteComponent-08a5693f186be19ca4963fa7d9ad6657-1",
            "file": "src/app/components/delete/delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete",
            "styleUrls": [
                "./delete.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./delete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 9,
                    "type": "EventEmitter"
                },
                {
                    "name": "deleteModal",
                    "defaultValue": "new EventEmitter()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n  @Output() closeModal = new EventEmitter();\n  @Output() deleteModal = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  onClose() {\n    this.closeModal.emit();\n  }\n\n  onDelete() {\n    this.deleteModal.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    position: fixed;\n    top: 0;\n    display: flex;\n    right: 0;\n    background: rgba(0, 0, 0, 0.32);\n    height: 100vh;\n    width: 100%;\n    z-index: 999;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .modal {\n    width: 40%;\n    min-height: 30vh;\n    overflow-x: auto;\n    background: #fff;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    position: relative;\n  }\n\n  .close-icon {\n    top: 18px;\n    right: 18px;\n    position: absolute;\n    cursor: pointer;\n  }\n\n  .body-text{\n      margin-bottom: 5rem;\n  }\n\n  .button-align{\n    float: right;\n  }",
                    "styleUrl": "./delete.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DeleteComponent-1",
            "templateData": "<div class=\"modal\">\n    <span class=\"close-icon\"><em style=\"font-size: 24px\" class=\"fa\"></em></span>\n    <div class=\"modal-body\">\n      <h2 style=\"text-align: center;\">{{ 'DELETE_FORM.HEADER_TEXT' | translate }}</h2>\n      <div class=\"body-text\">\n        {{ 'DELETE_FORM.BODY_TEXT' | translate }}\n        </div>\n\n        <div class=\"button-align\">\n          <form-modal-button-component buttonlabel=\"{{ 'DELETE_FORM.CANCEL_BUTTON' | translate }}\" (click)= \"onClose()\" (keyup.enter)=\"onClose()\" aria-label=\"Close the modal\"></form-modal-button-component>\n          <form-modal-button-component buttonlabel=\"{{ 'DELETE_FORM.DELETE_BUTTON' | translate }}\" (click)= \"onDelete()\" (keyup.enter)=\"onDelete()\" aria-label=\"Delete the selected item\"></form-modal-button-component>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-bad54a12bdc44da1aceea3a1aafe3e4e",
            "file": "src/stories/footer-stories/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./../../app/common/footer/footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/common/footer/footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './../../app/common/footer/footer.component.html',\n    styleUrls: ['./../../app/common/footer/footer.component.css']\n})\nexport class FooterComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\nfooter {\n  text-align: center;\n  color: #5f6368;\n  background: var(--footer-background);\n  line-height: 20px;\n  border-top: 1px solid #e4e4e4;\n  position: fixed;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n    margin-bottom: 0px;\n}",
                    "styleUrl": "./../../app/common/footer/footer.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<footer>\n  <p>{{'FOOTER_DETAILS.FOOTER_AUTHOR' | translate}}: {{'FOOTER_DETAILS.FOOTER_AUTHOR_NAME' | translate}}<br>\n  <a href=\"mailto:ashish.kapri@coditas.com\">{{'FOOTER_DETAILS.FOOTER_CONTENT' | translate}}</a></p>\n</footer>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-89a7dd7e4713826222f2839b069b2524-1",
            "file": "src/app/common/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\nfooter {\n  text-align: center;\n  color: #5f6368;\n  background: var(--footer-background);\n  line-height: 20px;\n  border-top: 1px solid #e4e4e4;\n  position: fixed;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n    margin-bottom: 0px;\n}",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FooterComponent-1",
            "templateData": "<footer>\n  <p>{{'FOOTER_DETAILS.FOOTER_AUTHOR' | translate}}: {{'FOOTER_DETAILS.FOOTER_AUTHOR_NAME' | translate}}<br>\n  <a href=\"mailto:ashish.kapri@coditas.com\">{{'FOOTER_DETAILS.FOOTER_CONTENT' | translate}}</a></p>\n</footer>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-4cfad8a5b8cfb8d508e32f3331d41549-1",
            "file": "src/stories/header-component/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./../../app/common/header/header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/common/header/header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './../../app/common/header/header.component.html',\n    styleUrls: ['./../../app/common/header/header.component.css']\n})\nexport class HeaderComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.header-right {\n  float: right;\n  display: flex;\n}\n\nheader {\n  overflow: hidden;\n  background-color: var(--header-background);\n  padding: 20px 10px;\n  color: #fff;\n}\n\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 53px;\n  height: 25px;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.space-between{\n  margin: 0 10px;\n}\n\n.logout{\n  border: none;\n    border-radius: 10px;\n    font-size: 20px;\n    cursor: pointer;\n}",
                    "styleUrl": "./../../app/common/header/header.component.css"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header>\n  <a>{{'BOOK_HEADER.TITLE' | translate}}</a>\n  <div class=\"header-right\">\n    <div class=\"space-between\">\n      <label for=\"dark\" class=\"toggle-switch\" title=\"Enable dark theme\" tabindex=0 >\n      <input type=\"checkbox\" name=\"dark\" [(ngModel)]= \"dark\" id=\"dark\"/>\n      <span class=\"slider round\"></span>\n    </label>\n  </div>\n   <div class=\"space-between\">\n     <span type=\"button\" tabindex=0 (click)= \"onLogout()\" title=\"click to logout\" class=\"logout\" (keyup.enter)=\"onLogout()\"> <i class=\"fa fa-sign-out\" ></i>\n    </span>\n  </div>\n\n  <div>\n    <select #langSelect (change)=\"switchLanguage($event.target.value)\">\n      <option value=\"en\">en</option>\n      <option value=\"fr\">fr</option>\n    </select>\n</div>\n</div>\n</header>\n\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-39c1e52efe807c92c43de60bd92951a5-2",
            "file": "src/app/common/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "translate",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "switchLanguage",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from '../../service/theme.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/state/app-state';\nimport { LogOut } from '../../store/actions/user-actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  get dark() {\n    return this.themeService.theme === 'dark';\n  }\n\n  set dark(enabled: boolean) {\n    this.themeService.theme = enabled ? 'dark' : null;\n  }\n\n  constructor(\n    private themeService: ThemeService,\n    public translate: TranslateService,\n    private store: Store<AppState>,\n\n  ) {\n    translate.addLangs(['en', 'fr']);\n    translate.setDefaultLang('en');\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onLogout(): void {\n    this.store.dispatch(new LogOut());\n  }\n\n  switchLanguage(lang:string) {\n    this.translate.use(lang);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.header-right {\n  float: right;\n  display: flex;\n}\n\nheader {\n  overflow: hidden;\n  background-color: var(--header-background);\n  padding: 20px 10px;\n  color: #fff;\n}\n\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 53px;\n  height: 25px;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.space-between{\n  margin: 0 10px;\n}\n\n.logout{\n  border: none;\n    border-radius: 10px;\n    font-size: 20px;\n    cursor: pointer;\n}",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService"
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService"
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "dark": {
                    "name": "dark",
                    "setSignature": {
                        "name": "dark",
                        "type": "void",
                        "args": [
                            {
                                "name": "enabled",
                                "type": "boolean"
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "enabled",
                                "type": "boolean",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dark",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "HeaderComponent-2",
            "templateData": "<header>\n  <a>{{'BOOK_HEADER.TITLE' | translate}}</a>\n  <div class=\"header-right\">\n    <div class=\"space-between\">\n      <label for=\"dark\" class=\"toggle-switch\" title=\"Enable dark theme\" tabindex=0 >\n      <input type=\"checkbox\" name=\"dark\" [(ngModel)]= \"dark\" id=\"dark\"/>\n      <span class=\"slider round\"></span>\n    </label>\n  </div>\n   <div class=\"space-between\">\n     <span type=\"button\" tabindex=0 (click)= \"onLogout()\" title=\"click to logout\" class=\"logout\" (keyup.enter)=\"onLogout()\"> <i class=\"fa fa-sign-out\" ></i>\n    </span>\n  </div>\n\n  <div>\n    <select #langSelect (change)=\"switchLanguage($event.target.value)\">\n      <option value=\"en\">en</option>\n      <option value=\"fr\">fr</option>\n    </select>\n</div>\n</div>\n</header>\n\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-b2154d7cddc6d619d689ecfcec030cd3",
            "file": "src/app/common/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./layout.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header></app-header>\n<div class=\"main_body\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-f92cfcc44ac6e54c3686bc1261f7e613",
            "file": "src/stories/login-component/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./../../app/user-registration/login/login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/user-registration/login/login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './../../app/user-registration/login/login.component.html',\n    styleUrls: ['./../../app/user-registration/login/login.component.css']\n})\nexport class LoginComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.login-class {\n  padding: 16px;\n  background-color: var( --color-white);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  width: 50%;\n  margin: auto;\n  position: absolute;\n  top: 10%;\n  left: 10%;\n  right: 10%;\n}\n\nlabel {\n  margin: 10px;\n}\n\ninput[type='text'],\ninput[type='password'] {\n  width: 100%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n* {\n  box-sizing: border-box;\n}\n\n.invalid-feedback {\n  color: #f44336;\n}\n\nh1 {\n  text-align: center;\n}",
                    "styleUrl": "./../../app/user-registration/login/login.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"login-class\">\n  <h1>{{'LOGIN_DETAILS.LOGIN' | translate}}</h1>\n  <form [formGroup]= \"loginForm\">\n    <div class = \"login-form\">\n      <label for=\"email\"><strong>{{ 'LOGIN_DETAILS.LOGIN_EMAIL' | translate}}</strong></label>\n      <input\n      id=\"email\"\n        type=\"text\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n      />\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.email.errors.required\">{{ 'LOGIN_DETAILS.ERROR.EMAIL_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div class =\"login-form\">\n      <label for=\"password\"><strong>{{ 'LOGIN_DETAILS.LOGIN_PASSWORD' | translate}}</strong></label>\n      <input\n      id=\"password\"\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n      />\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.password.errors.required\">{{ 'LOGIN_DETAILS.ERROR.PASSWORD_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n      <my-button-component buttonName= \"{{'LOGIN_DETAILS.LOGIN' | translate}}\" (click)= \"onSubmit()\" (keyup.enter)=\"onSubmit()\"  aria-label=\"login\"></my-button-component>\n      <my-button-component buttonName= \"{{ 'LOGIN_DETAILS.REGISTER' | translate}}\" (click)= \"onRegisterNavigate()\" (keyup.enter)=\"onRegisterNavigate()\" aria-label=\"Sign up to register user\"></my-button-component>\n  </form>\n</section>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-e9f3ec133eb17c8ead230d294e246b5f-1",
            "file": "src/app/user-registration/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "onRegisterNavigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/state/app-state';\nimport { Observable } from 'rxjs';\nimport { LogIn } from '../../store/actions/user-actions';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted: boolean = false;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store<AppState>,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    const payload = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password,\n    };\n    this.store.dispatch(new LogIn(payload));\n  }\n\n  onRegisterNavigate() {\n    this.router.navigate(['/sign-up']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/theme/dark.css';\n@import '../../../assets/theme/base.css';\n@import '../../../assets/theme/default.css';\n\n.login-class {\n  padding: 16px;\n  background-color: var( --color-white);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  width: 50%;\n  margin: auto;\n  position: absolute;\n  top: 10%;\n  left: 10%;\n  right: 10%;\n}\n\nlabel {\n  margin: 10px;\n}\n\ninput[type='text'],\ninput[type='password'] {\n  width: 100%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n* {\n  box-sizing: border-box;\n}\n\n.invalid-feedback {\n  color: #f44336;\n}\n\nh1 {\n  text-align: center;\n}",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LoginComponent-1",
            "templateData": "<section class=\"login-class\">\n  <h1>{{'LOGIN_DETAILS.LOGIN' | translate}}</h1>\n  <form [formGroup]= \"loginForm\">\n    <div class = \"login-form\">\n      <label for=\"email\"><strong>{{ 'LOGIN_DETAILS.LOGIN_EMAIL' | translate}}</strong></label>\n      <input\n      id=\"email\"\n        type=\"text\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n      />\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.email.errors.required\">{{ 'LOGIN_DETAILS.ERROR.EMAIL_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div class =\"login-form\">\n      <label for=\"password\"><strong>{{ 'LOGIN_DETAILS.LOGIN_PASSWORD' | translate}}</strong></label>\n      <input\n      id=\"password\"\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n      />\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.password.errors.required\">{{ 'LOGIN_DETAILS.ERROR.PASSWORD_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n      <my-button-component buttonName= \"{{'LOGIN_DETAILS.LOGIN' | translate}}\" (click)= \"onSubmit()\" (keyup.enter)=\"onSubmit()\"  aria-label=\"login\"></my-button-component>\n      <my-button-component buttonName= \"{{ 'LOGIN_DETAILS.REGISTER' | translate}}\" (click)= \"onRegisterNavigate()\" (keyup.enter)=\"onRegisterNavigate()\" aria-label=\"Sign up to register user\"></my-button-component>\n  </form>\n</section>\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-25edf6a233b0e1366ec13563bcb5e45d",
            "file": "src/app/common/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [
                "./navbar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navbar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <p>navbar works!</p> -->\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-7c936b6192ea16b797eff15a5e37f4a5",
            "file": "src/app/user-registration/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-up",
            "styleUrls": [
                "./sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "registerForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "onLoginNavigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { SignUp } from '../../store/actions/user-actions';\nimport { AppState } from '../../store/state/app-state';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted:boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store<AppState>,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    const payload = {\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password,\n      firstName: this.registerForm.value.firstName,\n      lastName: this.registerForm.value.lastName\n    };\n    this.store.dispatch(new SignUp(payload));\n  }\n\n  onLoginNavigate() {\n    this.router.navigate(['/login']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input[type=text], input[type=password] {\n  width: 100%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n* {\n  box-sizing: border-box;\n}\n\n.signup-container {\n  padding: 16px;\n  background-color: white;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  width: 50%;\n  margin: auto;\n  position: absolute;\n    top: 10%;\n    left: 10%;\n    right: 10%;\n}\n\nh1{\n  text-align: center;\n}\n\n.invalid-feedback{\n  color: #f44336;\n}\n",
                    "styleUrl": "./sign-up.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            },
            "templateData": "<section class=\"signup-container\">\n  <h1>{{'REGISTER_DETAILS.REGISTER' | translate}}</h1>\n  <form [formGroup]= \"registerForm\">\n    <div>\n      <label for=\"firstName\"><strong>{{'REGISTER_DETAILS.FIRST_NAME' | translate}}</strong></label>\n      <input\n      id=\"firstName\"\n        type=\"text\"\n        formControlName=\"firstName\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.firstName.errors.required\">{{'REGISTER_DETAILS.FIRST_NAME' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"lastName\"><strong>{{'REGISTER_DETAILS.LAST_NAME' | translate}}</strong></label>\n      <input\n      id=\"lastName\"\n        type=\"text\"\n        formControlName=\"lastName\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.lastName.errors.required\">{{'REGISTER_DETAILS.ERROR.LAST_NAME_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"email\"><strong>{{'REGISTER_DETAILS.REGISTER_EMAIL' | translate}}</strong></label>\n      <input\n      id=\"email\"\n        type=\"text\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n      />\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.email.errors.required\">{{'REGISTER_DETAILS.ERROR.EMAIL_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"password\"><strong>{{'REGISTER_DETAILS.REGISTER_PASSWORD' | translate}}</strong></label>\n      <input\n      id=\"password\"\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n      />\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.password.errors.required\">{{'REGISTER_DETAILS.ERROR.PASSWORD_REQUIRED' | translate}}</div>\n        <div *ngIf=\"f.password.errors.minlength\">\n          {{'REGISTER_DETAILS.ERROR.PASSWORD_LENGTH' | translate}}\n        </div>\n      </div>\n    </div>\n    <div>\n      <my-button-component buttonName= \"{{'REGISTER_DETAILS.REGISTER' | translate}}\" (click)= \"onSubmit()\" (keyup.enter)=\"onSubmit()\" aria-label=\"Save the registred data\"></my-button-component>\n      <my-button-component buttonName= \"{{'REGISTER_DETAILS.CANCEL' | translate}}\" (keyup.enter)=\"onLoginNavigate()\" (click)=\"onLoginNavigate()\" aria-label=\"Redirect to login page on registration success\"></my-button-component>\n    </div>\n  </form>\n</section>\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-94794a71f6bd25edb94663eebf9ef367-1",
            "file": "src/stories/sign-up-component/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-up",
            "styleUrls": [
                "./../../app/user-registration/sign-up/sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./../../app/user-registration/sign-up/sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './../../app/user-registration/sign-up/sign-up.component.html',\n    styleUrls: ['./../../app/user-registration/sign-up/sign-up.component.css']\n})\nexport class SignUpComponent{}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input[type=text], input[type=password] {\n  width: 100%;\n  padding: 15px;\n  margin: 5px 0 22px 0;\n  display: inline-block;\n  border: none;\n  background: #f1f1f1;\n}\n* {\n  box-sizing: border-box;\n}\n\n.signup-container {\n  padding: 16px;\n  background-color: white;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  width: 50%;\n  margin: auto;\n  position: absolute;\n    top: 10%;\n    left: 10%;\n    right: 10%;\n}\n\nh1{\n  text-align: center;\n}\n\n.invalid-feedback{\n  color: #f44336;\n}\n",
                    "styleUrl": "./../../app/user-registration/sign-up/sign-up.component.css"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SignUpComponent-1",
            "templateData": "<section class=\"signup-container\">\n  <h1>{{'REGISTER_DETAILS.REGISTER' | translate}}</h1>\n  <form [formGroup]= \"registerForm\">\n    <div>\n      <label for=\"firstName\"><strong>{{'REGISTER_DETAILS.FIRST_NAME' | translate}}</strong></label>\n      <input\n      id=\"firstName\"\n        type=\"text\"\n        formControlName=\"firstName\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.firstName.errors.required\">{{'REGISTER_DETAILS.FIRST_NAME' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"lastName\"><strong>{{'REGISTER_DETAILS.LAST_NAME' | translate}}</strong></label>\n      <input\n      id=\"lastName\"\n        type=\"text\"\n        formControlName=\"lastName\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\n      />\n      <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.lastName.errors.required\">{{'REGISTER_DETAILS.ERROR.LAST_NAME_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"email\"><strong>{{'REGISTER_DETAILS.REGISTER_EMAIL' | translate}}</strong></label>\n      <input\n      id=\"email\"\n        type=\"text\"\n        formControlName=\"email\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n      />\n      <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.email.errors.required\">{{'REGISTER_DETAILS.ERROR.EMAIL_REQUIRED' | translate}}</div>\n      </div>\n    </div>\n    <div>\n      <label for=\"password\"><strong>{{'REGISTER_DETAILS.REGISTER_PASSWORD' | translate}}</strong></label>\n      <input\n      id=\"password\"\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n      />\n      <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"f.password.errors.required\">{{'REGISTER_DETAILS.ERROR.PASSWORD_REQUIRED' | translate}}</div>\n        <div *ngIf=\"f.password.errors.minlength\">\n          {{'REGISTER_DETAILS.ERROR.PASSWORD_LENGTH' | translate}}\n        </div>\n      </div>\n    </div>\n    <div>\n      <my-button-component buttonName= \"{{'REGISTER_DETAILS.REGISTER' | translate}}\" (click)= \"onSubmit()\" (keyup.enter)=\"onSubmit()\" aria-label=\"Save the registred data\"></my-button-component>\n      <my-button-component buttonName= \"{{'REGISTER_DETAILS.CANCEL' | translate}}\" (keyup.enter)=\"onLoginNavigate()\" (click)=\"onLoginNavigate()\" aria-label=\"Redirect to login page on registration success\"></my-button-component>\n    </div>\n  </form>\n</section>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "BookService"
                        },
                        {
                            "name": "ThemeService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "SignUpComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "BookModule"
                        },
                        {
                            "name": "LayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BookModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BookRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BookRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthLayoutComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthLayoutComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/action-book-component/action-book.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onClose: action('close'),\n  getData: action('get data'),\n  onSubmit: action('submit')\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login-component/login.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n  onRegisterNavigate: action('/sign-up'),\n  onSubmit: action('submit')\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/sign-up-component/sign-up.component.stories.ts",
                "type": "object",
                "defaultValue": "{\n    onLoginNavigate: action('/login'),\n    onSubmit: action('submit')\n  }"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  hostURL: 'http://localhost:3000/Books/'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  hostURL: 'http://localhost:3000/Books',\n  registrationURL: 'http://localhost:8080/users/',\n  loginURL:  'http://localhost:8080/login/'\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/reducer/user-reducer.ts",
                "type": "State",
                "defaultValue": "{\n  isAuthenticated: false,\n  user: null,\n  responseMessage: null,\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/state/app-state.ts",
                "type": "object",
                "defaultValue": "{\n  auth: ActionReducer.reducer\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectAuthState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/state/app-state.ts",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>('auth')"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/components/book.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/app/common/layout.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/action-book-component/action-book.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/books/books.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/delete-component/delete.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/footer-stories/footer.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/header-component/header.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/login-component/login.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "HttpLoaderFactory",
                "file": "src/stories/sign-up-component/sign-up.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpClient"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reducer",
                "file": "src/app/store/reducer/user-reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": ""
                    },
                    {
                        "name": "action"
                    }
                ],
                "returnType": "State",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "UserActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "LogIn | LogInSuccess | LogInFailure | SignUp | SignUpSuccess | SignUpFailure | LogOut",
                "file": "src/app/store/actions/user-actions.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [
            {
                "name": "UserActionTypes",
                "childs": [
                    {
                        "name": "LOGIN",
                        "value": "[User] Login"
                    },
                    {
                        "name": "LOGIN_SUCCESS",
                        "value": "[User] Login Success"
                    },
                    {
                        "name": "LOGIN_FAILURE",
                        "value": "[User] Login Failure"
                    },
                    {
                        "name": "SIGNUP",
                        "value": "[User] Signup"
                    },
                    {
                        "name": "SIGNUP_SUCCESS",
                        "value": "[User] Signup Success"
                    },
                    {
                        "name": "SIGNUP_FAILURE",
                        "value": "[User] Signup Failure"
                    },
                    {
                        "name": "LOGOUT",
                        "value": "[User] Logout"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/store/actions/user-actions.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/action-book-component/action-book.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/action-book-component/action-book.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onClose: action('close'),\n  getData: action('get data'),\n  onSubmit: action('submit')\n}"
                }
            ],
            "src/stories/login-component/login.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login-component/login.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n  onRegisterNavigate: action('/sign-up'),\n  onSubmit: action('submit')\n}"
                }
            ],
            "src/stories/sign-up-component/sign-up.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/sign-up-component/sign-up.component.stories.ts",
                    "type": "object",
                    "defaultValue": "{\n    onLoginNavigate: action('/login'),\n    onSubmit: action('submit')\n  }"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  hostURL: 'http://localhost:3000/Books/'\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  hostURL: 'http://localhost:3000/Books',\n  registrationURL: 'http://localhost:8080/users/',\n  loginURL:  'http://localhost:8080/login/'\n}"
                }
            ],
            "src/app/store/reducer/user-reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/reducer/user-reducer.ts",
                    "type": "State",
                    "defaultValue": "{\n  isAuthenticated: false,\n  user: null,\n  responseMessage: null,\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/store/state/app-state.ts": [
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/state/app-state.ts",
                    "type": "object",
                    "defaultValue": "{\n  auth: ActionReducer.reducer\n}"
                },
                {
                    "name": "selectAuthState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/state/app-state.ts",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>('auth')"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/app.module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/components/book.module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/components/book.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/common/layout.module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/app/common/layout.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/action-book-component/action-book.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/action-book-component/action-book.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/books/books.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/books/books.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/delete-component/delete.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/delete-component/delete.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/footer-stories/footer.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/footer-stories/footer.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/header-component/header.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/header-component/header.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/login-component/login.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/login-component/login.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/sign-up-component/sign-up.component.stories.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/stories/sign-up-component/sign-up.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/store/reducer/user-reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/store/reducer/user-reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": ""
                        },
                        {
                            "name": "action"
                        }
                    ],
                    "returnType": "State",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/store/actions/user-actions.ts": [
                {
                    "name": "UserActionTypes",
                    "childs": [
                        {
                            "name": "LOGIN",
                            "value": "[User] Login"
                        },
                        {
                            "name": "LOGIN_SUCCESS",
                            "value": "[User] Login Success"
                        },
                        {
                            "name": "LOGIN_FAILURE",
                            "value": "[User] Login Failure"
                        },
                        {
                            "name": "SIGNUP",
                            "value": "[User] Signup"
                        },
                        {
                            "name": "SIGNUP_SUCCESS",
                            "value": "[User] Signup Success"
                        },
                        {
                            "name": "SIGNUP_FAILURE",
                            "value": "[User] Signup Failure"
                        },
                        {
                            "name": "LOGOUT",
                            "value": "[User] Logout"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/store/actions/user-actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/store/actions/user-actions.ts": [
                {
                    "name": "UserActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "LogIn | LogInSuccess | LogInFailure | SignUp | SignUpSuccess | SignUpFailure | LogOut",
                    "file": "src/app/store/actions/user-actions.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/components/book-routing.module.ts",
                "module": "BookRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "BooksComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/auth-layout/auth-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout.module.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/mock/mock-store.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StoreMocks",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/action-book/action-book.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionBookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/book.module.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/books/books.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/delete/delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/models/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/service/api/api-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/service/book-service/book.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BookService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/service/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LogIn",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LogInFailure",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LogInSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LogOut",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignUp",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignUpFailure",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/actions/user-actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignUpSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/effect/user-effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthEffects",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducer/user-reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducer/user-reducer.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/reducer/user-reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/state/app-state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/state/app-state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/state/app-state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuthState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user-registration/gaurd/auth-gaurd.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/user-registration/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/user-registration/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/action-book-component/action-book.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/action-book-component/action-book.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/action-book-component/action-book.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionBookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/books/books.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/books/books.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/delete-component/delete.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/delete-component/delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/footer-stories/footer.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/footer-stories/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header-component/header.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header-component/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/login-component/login.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login-component/login.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login-component/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/sign-up-component/sign-up.component.stories.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/sign-up-component/sign-up.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/sign-up-component/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/storybookMocks.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StorybookMock",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/web-components/form-modal-button.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormModalButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/web-components/my-button.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MyButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}